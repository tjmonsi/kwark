let t=0;const e={},s=/([A-Z])/g;function r(t){return e[t]||(e[t]=t.replace(s,"-$1").toLowerCase())}const i=Promise.resolve(!0),o=1,a=4,n=8,p=16,h=32,c={toAttribute(t,e){switch(e){case Boolean:return t?"":null;case Object:case Array:return null==t?t:JSON.stringify(t)}return t},fromAttribute(t,e){switch(e){case Boolean:return null!==t;case Number:return null===t?null:Number(t);case Object:case Array:return JSON.parse(t)}return t}},u=(t,e)=>e!==t&&(e==e||t==t),_={attribute:!0,type:String,converter:c,reflect:!1,notify:!1,hasChanged:u},d=(e=>{let s=e.__mixinApplications;s||(s=new WeakMap,e.__mixinApplications=s);let r=t++;return function(t){let i=t.__mixinSet;if(i&&i[r])return t;let o=s,a=o.get(t);a||(a=e(t),o.set(t,a));let n=Object.create(a.__mixinSet||i||null);return n[r]=!0,a.__mixinSet=n,a}})(t=>{return class extends t{static get observedAttributes(){this.finalize();const t=[];return this._classProperties.forEach((e,s)=>{const r=this._attributeNameForProperty(s,e);void 0!==r&&(this._attributeToPropertyMap.set(r,s),t.push(r))}),t}static finalize(){if(this.hasOwnProperty("finalized")&&this.finalized)return null;const t=Object.getPrototypeOf(this);if("function"==typeof t.finalize&&t.finalize(),this.finalized=!0,this._ensureClassProperties(),this._attributeToPropertyMap=new Map,this.hasOwnProperty("properties")){const t=this.properties,e=[...Object.getOwnPropertyNames(t),..."function"==typeof Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(t):[]];for(const s of e)this.createProperty(s,t[s])}}static _ensureClassProperties(){if(!this.hasOwnProperty("_classProperties")){this._classProperties=new Map;const t=Object.getPrototypeOf(this)._classProperties;void 0!==t&&t.forEach((t,e)=>this._classProperties.set(e,t))}}static createProperty(t,e){this._ensureClassProperties(),this._classProperties.set(t,e);const{value:s}=e||{};if(e.noAccessor||this.prototype.hasOwnProperty(t))return;const r="symbol"==typeof t?Symbol(t):`__${t}`;Object.defineProperty(this.prototype,t,{get(){return this[r]},set(e){const s=this[t];this[r]=e,this._requestUpdate(t,s)},configurable:!0,enumerable:!0}),this.prototype[t]=s}static _attributeNameForProperty(t,{attribute:e}){return!1===e?void 0:"string"==typeof e?e:"string"==typeof t?r(t):void 0}static _valueHasChanged(t,e,s=u){return s(t,e)}static _propertyValueFromAttribute(t,e){const s=e.type,r=e.converter||c,i="function"==typeof r?r:r.fromAttribute;return i?i(t,s):t}static _propertyValueToAttribute(t,e){if(void 0===e.reflect)return;const s=e.type,r=e.converter;return(r&&r.toAttribute||c.toAttribute)(t,s)}constructor(){super(),this._updateState=0,this._instanceProperties=void 0,this._updatePromise=i,this._hasConnectedResolver=void 0,this._changedProperties||(this._changedProperties=new Map),this._reflectingProperties=void 0,this.initialize()}initialize(){this._saveInstanceProperties(),this._requestUpdate()}_saveInstanceProperties(){this.constructor._classProperties.forEach((t,e)=>{if(this.hasOwnProperty(e)){const t=this[e];delete this[e],this._instanceProperties||(this._instanceProperties=new Map),this._instanceProperties.set(e,t)}})}_applyInstanceProperties(){this._instanceProperties.forEach((t,e)=>{this[e]=t}),this._instanceProperties=void 0}connectedCallback(){this._updateState=this._updateState|h,this._hasConnectedResolver&&(this._hasConnectedResolver(),this._hasConnectedResolver=void 0)}attributeChangedCallback(t,e,s){e!==s&&this._attributeToProperty(t,s)}_propertyToAttribute(t,e,s=_){const r=this.constructor,i=r._attributeNameForProperty(t,s);if(void 0!==i){const t=r._propertyValueToAttribute(e,s);if(void 0===t)return;this._updateState=this._updateState|n,null==t?this.removeAttribute(i):this.setAttribute(i,t),this._updateState=this._updateState&~n}}_attributeToProperty(t,e){if(this._updateState&n)return;const s=this.constructor,r=s._attributeToPropertyMap.get(t);if(void 0!==r){const t=s._classProperties.get(r)||_;this._updateState=this._updateState|p,this[r]=s._propertyValueFromAttribute(e,t),this._updateState=this._updateState&~p}}_requestUpdate(t,e){let s=!0;if(void 0!==t){const r=this.constructor,i=r._classProperties.get(t)||_;if(r._valueHasChanged(this[t],e,i.hasChanged)){this._changedProperties||(this._changedProperties=new Map),this._changedProperties.has(t)||this._changedProperties.set(t,e);const{reflect:s,notify:r,observer:o}=i;!0!==s||this._updateState&p||(void 0===this._reflectingProperties&&(this._reflectingProperties=new Map),this._reflectingProperties.set(t,i)),!0===r&&(void 0===this._notifyProperties&&(this._notifyProperties=new Map),this._notifyProperties.set(t,i)),void 0!==o&&"function"==typeof this[o]&&(void 0===this._observerProperties&&(this._observerProperties=new Map),this._observerProperties.set(t,o))}else s=!1}!this._hasRequestedUpdate&&s&&this._enqueueUpdate()}requestUpdate(t,e){return this._requestUpdate(t,e),this.updateComplete}async _enqueueUpdate(){let t,e;this._updateState=this._updateState|a;const s=this._updatePromise;this._updatePromise=new Promise((s,r)=>{t=s,e=r});try{await s}catch(t){}this._hasConnected||await new Promise(t=>{this._hasConnectedResolver=t});try{const t=this.performUpdate();null!=t&&await t}catch(t){e(t)}t(!this._hasRequestedUpdate)}get _hasConnected(){return this._updateState&h}get _hasRequestedUpdate(){return this._updateState&a}get hasUpdated(){return this._updateState&o}performUpdate(){this._instanceProperties&&this._applyInstanceProperties();let t=!1;const e=this._changedProperties;try{(t=this.shouldUpdate(e))&&this.update(e)}catch(e){throw t=!1,e}finally{this._markUpdated()}t&&(this._updateState&o||(this._updateState=this._updateState|o,this.firstUpdated(e)),this.updated(e))}_markUpdated(){this._changedProperties=new Map,this._updateState=this._updateState&~a}get updateComplete(){return this._updatePromise}shouldUpdate(t){return!0}update(t){void 0!==this._reflectingProperties&&this._reflectingProperties.size>0&&(this._reflectingProperties.forEach((t,e)=>this._propertyToAttribute(e,this[e],t)),this._reflectingProperties=void 0),void 0!==this._notifyProperties&&this._notifyProperties.size>0&&(this._notifyProperties.forEach((t,e)=>this.dispatchEvent(new window.CustomEvent(`${r(e)}-change`,{detail:this[e]}))),this._notifyProperties=void 0),void 0!==this._observerProperties&&this._observerProperties.size>0&&(this._observerProperties.forEach((t,e)=>this[t](e)),this._observerProperties=void 0)}updated(t){}firstUpdated(t){}}}),{customElements:l,HTMLElement:P}=window;class f extends(d(P)){static get is(){return"web-component"}static get properties(){return{prop1:{type:String}}}}console.log(f.is),l.define(f.is,f);
